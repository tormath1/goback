// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server/proto/manager.proto

/*
Package server is a generated protocol buffer package.

It is generated from these files:
	server/proto/manager.proto

It has these top-level messages:
	SaveVolumeRequest
	Error
*/
package server

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SaveVolumeRequest struct {
	VolumeName  string `protobuf:"bytes,1,opt,name=volumeName" json:"volumeName,omitempty"`
	Destination string `protobuf:"bytes,2,opt,name=destination" json:"destination,omitempty"`
}

func (m *SaveVolumeRequest) Reset()                    { *m = SaveVolumeRequest{} }
func (m *SaveVolumeRequest) String() string            { return proto.CompactTextString(m) }
func (*SaveVolumeRequest) ProtoMessage()               {}
func (*SaveVolumeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SaveVolumeRequest) GetVolumeName() string {
	if m != nil {
		return m.VolumeName
	}
	return ""
}

func (m *SaveVolumeRequest) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

type Error struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*SaveVolumeRequest)(nil), "server.SaveVolumeRequest")
	proto.RegisterType((*Error)(nil), "server.Error")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Manager service

type ManagerClient interface {
	SaveVolume(ctx context.Context, in *SaveVolumeRequest, opts ...grpc.CallOption) (*Error, error)
}

type managerClient struct {
	cc *grpc.ClientConn
}

func NewManagerClient(cc *grpc.ClientConn) ManagerClient {
	return &managerClient{cc}
}

func (c *managerClient) SaveVolume(ctx context.Context, in *SaveVolumeRequest, opts ...grpc.CallOption) (*Error, error) {
	out := new(Error)
	err := grpc.Invoke(ctx, "/server.Manager/SaveVolume", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Manager service

type ManagerServer interface {
	SaveVolume(context.Context, *SaveVolumeRequest) (*Error, error)
}

func RegisterManagerServer(s *grpc.Server, srv ManagerServer) {
	s.RegisterService(&_Manager_serviceDesc, srv)
}

func _Manager_SaveVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveVolumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagerServer).SaveVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/server.Manager/SaveVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagerServer).SaveVolume(ctx, req.(*SaveVolumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Manager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "server.Manager",
	HandlerType: (*ManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveVolume",
			Handler:    _Manager_SaveVolume_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server/proto/manager.proto",
}

func init() { proto.RegisterFile("server/proto/manager.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2a, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x4d, 0xcc, 0x4b, 0x4c, 0x4f, 0x2d,
	0xd2, 0x03, 0xf3, 0x84, 0xd8, 0x20, 0x72, 0x4a, 0xa1, 0x5c, 0x82, 0xc1, 0x89, 0x65, 0xa9, 0x61,
	0xf9, 0x39, 0xa5, 0xb9, 0xa9, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x72, 0x5c, 0x5c,
	0x65, 0x60, 0x01, 0xbf, 0xc4, 0xdc, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x24, 0x11,
	0x21, 0x05, 0x2e, 0xee, 0x94, 0xd4, 0xe2, 0x92, 0xcc, 0xbc, 0xc4, 0x92, 0xcc, 0xfc, 0x3c, 0x09,
	0x26, 0xb0, 0x02, 0x64, 0x21, 0x25, 0x45, 0x2e, 0x56, 0xd7, 0xa2, 0xa2, 0xfc, 0x22, 0x21, 0x09,
	0x2e, 0xf6, 0xdc, 0xd4, 0xe2, 0xe2, 0xc4, 0x74, 0x98, 0x39, 0x30, 0xae, 0x91, 0x33, 0x17, 0xbb,
	0x2f, 0xc4, 0x49, 0x42, 0x16, 0x5c, 0x5c, 0x08, 0x47, 0x08, 0x49, 0xea, 0x41, 0xdc, 0xa6, 0x87,
	0xe1, 0x30, 0x29, 0x5e, 0x98, 0x14, 0xd8, 0x70, 0x25, 0x86, 0x24, 0x36, 0xb0, 0x6f, 0x8c, 0x01,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x7c, 0xe2, 0x9e, 0x48, 0xeb, 0x00, 0x00, 0x00,
}
